{"version":3,"sources":["../src/app.js"],"names":["mongoose","connect","useNewUrlParser","then","console","log","catch","app","use","express","json","urlencoded","extended","router","req","res","next","error","Error","message","status","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEAA,mBAASC,OAAT,CAAiB,qCAAjB,EAAwD,EAAEC,iBAAiB,IAAnB,EAAxD,EACKC,IADL,CACU,YAAM;AACRC,YAAQC,GAAR,CAAY,iBAAZ;AACH,CAHL,EAIKC,KAJL,CAIW,YAAM;AACTF,YAAQC,GAAR,CAAY,mBAAZ;AACH,CANL;;AAQA,IAAME,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAH,IAAIC,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,IAAZ,EAAnB,CAAR;AACAL,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQ,MAAR,EAAgBK,cAAhB;;AAEAN,IAAIC,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,QAAMC,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,UAAME,OAAN,GAAgB,eAAhB;AACAF,UAAMG,MAAN,GAAe,GAAf;AACAJ,SAAKC,KAAL;AACH,CALD;AAMAV,IAAIC,GAAJ,CAAQ,UAACS,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AAC/BD,QAAIK,MAAJ,CAAWH,MAAMG,MAAN,IAAgB,GAA3B;AACA,WAAOL,IAAIL,IAAJ,CAAS;AACZO,eAAO,EAAEE,SAASF,MAAME,OAAjB;AADK,KAAT,CAAP;AAGH,CALD;;AAUAZ,IAAIc,MAAJ,CAAW,IAAX,EAAiB;AAAA,WAAMjB,QAAQC,GAAR,CAAY,8BAAZ,CAAN;AAAA,CAAjB","file":"app.js","sourcesContent":["import express from 'express';\nimport mongoose from 'mongoose';\nimport logger from 'morgan';\n\nimport { router } from './config/routes';\n\nmongoose.connect(\"mongodb://localhost:27017/NodeCRUD1\", { useNewUrlParser: true })\n    .then(() => {\n        console.log('connected to db');\n    })\n    .catch(() => {\n        console.log('connection failed');\n    });\n\nconst app = express();\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(logger('dev'));\napp.use('/api', router);\n\napp.use((req, res, next) => {\n    const error = new Error('Not Found');\n    error.message = 'invalid route';\n    error.status = 404;\n    next(error);\n});\napp.use((error, req, res, next) => {\n    res.status(error.status || 500);\n    return res.json({\n        error: { message: error.message },\n    });\n});\n\n\n\n\napp.listen(3000, () => console.log('server running on port: 3000'));\n"]}